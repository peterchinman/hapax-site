/* CSS DIRECTORY
	1. =IMPORT
	2. =VARIABLES
	3. =GLOBAL
	4. =HEADER
	5. =PRIMARY
      5.1 NESTED GRID
      5.1 BUTTON STYLING
   6. =OUTPUT
   7. =TYPOGRAPHY
*/

/* ===IMPORT=== */

@import 'reset.css';
@import 'setup.css';

/* import "Roboto Mono" and "Spectral" */
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&family=Spectral:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,200;1,300;1,400;1,500;1,600;1,700;1,800&display=swap');

/* ===VARIABLES=== */

:root {
   --neutral-1000: #000000;
   --neutral-800:  #333333;
   --neutral-700:  #4D4D4D;
   --neutral-500:  #808080;
   --neutral-100:  #E5E5E5;
   --neutral-50:   #F2F2F2;
   --neutral-30:   #F7F7F7;
   --neutral-0:    #FFFFFF;
   --transparent: transparent;

   --ecru:         #FEFFF0;
   --golden:       #FFF8B2;
   --dark-lav:     #8A7AB8;
   --light-lav:    #F7F6F9;


   --header-bg:         var(--ecru);
   --header-text:       var(--neutral-900);
   --header-shadow:     #D2CA7880;

   --main-bg:           var(--ecru);
   --body-text:         var(--netural-1000);

   --second-bg:         var(--light-lav);


   --button-primary:       var(--ecru);
   --button-emphasis:   var(--golden);
   --button-quiet:      var(--neutral-100);




   --stroke-color:      var(--neutral-700);
   --body-text:         var(--neutral-1000);
   --drop-shadow-color: var(--dark-lav);

   --max-width:   1200px;
   --column-gap:  32px;
   --padding-med: 2.5rem;
   --padding-med-big: 3.5rem;
   --padding-big: 5rem;
   --outer-columns: 40px;

}

/* ===GLOBAL=== */

html {
   scroll-behavior: smooth !important;
}

body {
 

   font-family: "Roboto Mono", monospace;
   background-color: var(--main-bg);

   max-width: var(--max-width);
   margin-inline: auto;

   padding-bottom: var(--padding-big);

   /* display: grid;
   --column-width: calc((var(--max-width) - 11 * var(--column-gap) - 2 * var(--outer-columns)) / 12);
   grid-template-columns: var(--outer-columns) repeat(12, 1fr) var(--outer-columns);
   column-gap: var(--column-gap); */
   
   
}

/* ===HEADER=== */

header {
   background-color: var(--header-bg);
   color: var(--header-text);

   padding-top: var(--padding-med);
   padding-bottom: var(--padding-big);

   /* display: grid;
   grid-template-columns: subgrid; */

   display: grid;
   --column-width: calc((var(--max-width) - 11 * var(--column-gap) - 2 * var(--outer-columns)) / 12);
   grid-template-columns: var(--outer-columns) repeat(12, 1fr) var(--outer-columns);
   column-gap: var(--column-gap);

   align-items: center;


   hr {
      grid-column: span 14;
      width: 95%;
   }

   .top-bar {
      margin-bottom: var(--padding-med-big);
   }

   .bottom-bar {
      margin-top: var(--padding-med-big);
   }

   .title {
      grid-column: 2 / span 6;
   }

   .description {
      grid-column: span 6; 
   }
}


/* ===PRIMARY=== */

main {

   
   background-color: var(--main-bg);
   padding-bottom: var(--padding-med);

   display: grid;
   --column-width: calc((var(--max-width) - 11 * var(--column-gap)) / 12);
   grid-template-columns: var(--outer-columns) repeat(12, 1fr) var(--outer-columns);
   column-gap: var(--column-gap);
   /* grid-auto-flow: column; */
   
}

/* NESTED GRID */

.examples {
   grid-column: 2 / span 6;

   display: grid;
   grid-template-columns: subgrid;

   h1 {
      grid-column: span 6;
      padding-right: 1rem;
   }

   ul {
      grid-column: span 6;
      grid-row: 2;
      display: grid;
      grid-template-columns: subgrid;
      grid-template-rows: repeat(3, 1fr);
      row-gap: 1rem;

      li {
         grid-column: span 2;
      }
   }
}

.upload {
   grid-column: span 6;
   display: grid;
   grid-template-columns: subgrid;

   h1 {
      grid-column: span 6;
   }

   .buttons {
      grid-column: span 6;
      grid-row: 2;
      display: flex;
      justify-content: space-between;
   }
}



/* BUTTON STLYING */

button {
   font-family: "Roboto Mono", monospace;
   font-size: 1.3rem;
   font-weight: 600;
   color: var(--body-text);
   padding-inline: 24px;
   padding-block: 11px;
   border: 1px solid var(--stroke-color);
   border-radius: 5px;
   box-shadow: 5px 5px var(--drop-shadow-color);
   cursor: pointer;
}

button:disabled {
   opacity: .5;
   cursor: default;
}

input[type=file] {
   display: block;
 }

.button-label {
   font-family: "Roboto Mono";
   font-style: italic;
   font-weight: 200;
   width: 100%;
   padding-top: .75rem;
   padding-left: 10px;
   font-size: .8rem;
   max-width: 200px;
}

 input[type=file]::file-selector-button {
   display: none;
 }

button.primary {
   background-color: var(--button-primary);
 }

button.highlight {
   background-color: var(--button-emphasis);
 }

 button.quiet {
   background-color: var(--button-quiet);
 }

 .find-hapaxes-button {
   display: flex;
   flex-direction: column;
   align-items: flex-start;
 }

/* ===OUTPUT=== */


.hapax-output {
   padding-top: 4rem;

   display: grid;
   --column-width: calc((var(--max-width) - 11 * var(--column-gap)) / 12);
   grid-template-columns: var(--outer-columns) repeat(12, 1fr) var(--outer-columns);
   column-gap: var(--column-gap);


   .hapax-card {

      padding-top: 4rem;
      grid-column: span 14;
      background-color: var(--second-bg);
      border-radius: 30px;

      margin-inline: calc(min(var(--max-width), 100vw) * .025);
      
      display: grid;
      grid-template-columns: subgrid;
   
      .top-bar {
      
         grid-column: 2 / span 12;
         display: grid;
         grid-template-columns: subgrid;
         align-items: center;
         padding-bottom: var(--padding-big);
   
         #status {
            grid-column: span 6;
            padding-bottom: 0;
         }
   
         .buttons {
            grid-column: span 6;
            display: flex;
            justify-content: space-between;
         }
   
      }

      #output {
         grid-column: 2 / span 12;
         line-height: 1.4;
         white-space: pre-wrap;
         word-wrap: break-word;
         hyphens: auto;

         /* TODO this padding should only appear when there are results?? */
         padding-bottom: 4rem;
      }
   }

   
}


#output {
   columns: 6;
   column-gap: var(--column-gap);

}



/* ===TYPOGRAPHY=== */


header .title {
   font-family: "Roboto Mono", monospace;
   font-weight: 500;
   /* font-size: min(80px, 7vw); */
   font-size: min(70px, 7vw);

   line-height: 1.1;
   white-space: pre-wrap;

   text-shadow: 5px 5px var(--header-shadow);
}

header p {
   font-family: "Spectral";
   line-height: 1.4;
   font-size: 1.2rem;
}

.assertive {
   font-weight: 600;
   padding-bottom: 2rem;
   font-size: 1.3rem;
}

em {
   font-style: italic;
}

p + p {
   padding-top: .75rem;
}



/* ===MEDIA QUERIES=== */

/* medium-wide */
@media (max-width: 1200px)
{
   #output {
      columns: 4;
   }
}

/* medium */
@media (max-width: 1068px)
{

   /* description goes under title */
   header {
      .title {
         grid-column: 2 / span 12;
         font-size: 70px;
         padding-bottom: var(--padding-med);
      }
   
      .description {
         grid-column: 2 / span 12; 
         /* max-width: 70ch; */
      }
   }
   /* upload under examples */

   .examples {
      grid-column: 2 / span 12;
      padding-bottom: var(--padding-big);

      h1 {
         grid-column: span 12;
         padding-right: 0;
      }

      ul {
         grid-column: span 12;

         li {
            grid-column: span 4;
         }
      }
   }

   .upload {
      grid-column: 2 / span 12;

      h1 {
         grid-column: span 12;
      }

      .buttons {
         grid-column: span 12;
         display: grid;
         grid-template-columns: subgrid;

         .select-text-button {
            grid-column: span 6;
         }

         .find-hapaxes-button {
            grid-column: span 6;
         }
      }
   }
   /* 3 columns of responses */

   #output {
      columns: 3;
   }

}


/* small */
@media (max-width: 720px)
{
   /* more space between examples */
   /* examples span halfway */

   .examples ul{
      row-gap: 1.5rem;

      li {
         grid-column: span 6;
      }
   }

   /* responsive title */
   header .title {
      font-size: min(70px, 14vw);
   }

 
   
  
   /* break output buttons under status */

   .hapax-output .hapax-card .top-bar {
      #status {
         grid-column: span 12;
         padding-bottom: var(--padding-med-big);
      }

      .buttons {
         grid-column: span 12;
      }
   }
   /* output in 2 columns */
   
   #output {
      columns: 2;
   }

}

/* smallest, i.e. phone widths */
@media (max-width: 580px)
{
   /* get rid of spacing columns */

   header {
      grid-template-columns: 0px repeat(12, 1fr) 0px;
      column-gap: 12px;

   }

   main {
      grid-template-columns: 0px repeat(12, 1fr) 0px;
      column-gap: 12px;
   }

   .hapax-output {
      grid-template-columns: 0px repeat(12, 1fr) 0px;
      column-gap: 12px;

   }

   /* more space between examples */

   .examples ul{
      row-gap: 2rem;
   }

   /* break select / export buttons vertical, full-width */

   .upload .buttons {

      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--padding-med);

      #select-text, #find-hapaxes {
         width: 80vw;
      }

      .find-hapaxes-button .button-label{
         width: 80vw;
         max-width: initial;
      }
   }

     /* no hapax card margin */

   .hapax-output .hapax-card {
      margin-inline: 0;
   }

   #output {
      columns: 1;
   }

   

}

